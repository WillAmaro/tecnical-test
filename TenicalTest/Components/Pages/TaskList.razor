@page "/tareas"
@inherits BlazorTecnicalTest.Logic.TaskListBase
@rendermode InteractiveServer

<div class="flex flex-col gap-10">
    <div class="flex items-center justify-center p-5">
        <div class="bg-white  rounded-lg shadow-lg">
            <div class="flex flex-col justify-center items-center">
                <img src="https://lpsgrupo.com/wp-content/uploads/2023/07/Mesa-de-trabajo-1@2x-2.png"
                     alt="Logo"
                     style="width: 100px; height: 100px;" />
            </div>
        </div>
    </div>

    <div class="flex w-[90%]  mx-auto">
        <button @onclick="() => Create()" class="bg-blue-500 text-white px-2 py-1 rounded w-auto cursor-pointer">
            Crear nueva tarea
        </button>

    </div>

    @if (tareas is null)
    {
        <div class="w-[90%] mx-auto relative overflow-x-auto shadow-md sm:rounded-lg">
        <p>Cargando tareas...</p>
        </div>
    }
    else if (!tareas.Any())
    {
        <div class="w-[90%] mx-auto relative overflow-x-auto shadow-md sm:rounded-lg">
        <p>No hay tareas registradas.</p>
        </div>
    }
    else
    {
        <div class="w-[90%] mx-auto relative overflow-x-auto shadow-md sm:rounded-lg">
            <table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400">
                <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
                    <tr>
                        <th class="px-6 py-3 text-center">Título</th>
                        <th class="px-6 py-3 text-center">Descripción</th>
                        <th class="px-6 py-3 text-center">Estado</th>
                        <th class="px-6 py-3"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var tarea in PagedTareas)
                    {
                        <tr class="border-b border-gray-200 odd:bg-white even:bg-gray-50 hover:bg-gray-100 transition duration-150">
                            <th scope="row" class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white text-center">
                                @tarea.Titulo
                            </th>
                            <td class="px-4 py-2 text-center">@tarea.Descripcion</td>
                            <td class="px-6 py-4 text-center">@tarea.Estado</td>
                            <td class="px-6 py-4 text-center">
                                <button class="bg-blue-500 text-white px-2 py-1 rounded"
                                        @onclick="() => Edit(tarea.Id)">
                                    Editar
                                </button>
                                <button class="bg-red-500 text-white px-2 py-1 rounded ml-2"
                                        @onclick="() => Delete(tarea.Id)">
                                    Eliminar
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

<div class="flex justify-center mt-4 space-x-2">

@if (TotalPages > 1)
{
        <button class="px-3 py-1 bg-gray-300 rounded disabled:opacity-50"
                @onclick="() => ChangePage(CurrentPage - 1)"
                disabled="@((CurrentPage == 1))">
            Anterior
        </button>

        }
    @for (int i = 1; i <= TotalPages; i++)
    {
        var pageNumber = i;  // captura local de la variable

        <button class="px-3 py-1 rounded @(pageNumber == CurrentPage ? "bg-blue-500 text-white" : "bg-gray-200")"
                @onclick="() => ChangePage(pageNumber)">
            @pageNumber
        </button>
    }
    
        @if (TotalPages > 1)
{
        <button class="px-3 py-1 bg-gray-300 rounded disabled:opacity-50"
                @onclick="() => ChangePage(CurrentPage + 1)"
                disabled="@((CurrentPage == TotalPages))">
            Siguiente
        </button>
}
    </div>




@* @page "/tasks"
@inherits BlazorTecnicalTest.Logic.TaskListBase
@rendermode InteractiveServer



@if (tareas == null)
{
    <p>Cargando tareas...</p>
}
else
{

    <div class="min-h-screen flex items-center justify-center bg-gray-100">
    <div class="bg-white border border-gray-300 rounded-lg shadow-lg p-8 w-full max-w-md">
        <div class="flex flex-col justify-center mb-4 items-center">
            <img src="https://lpsgrupo.com/wp-content/uploads/2023/07/Mesa-de-trabajo-1@2x-2.png"
                 alt="Logo"
                 style="width: 100px; height: 100px;" />
           
      
        </div>
    <div class="grid grid-cols-3 gap-4">
        @foreach (var estado in new[] { "Pendiente", "En Proceso", "Completado" })
        {
            <div class="bg-gray-100 p-4 rounded shadow-md">
                <h4 class="text-lg font-semibold mb-2">@estado</h4>

                @foreach (var tarea in tareas.Where(t => t.Estado == estado))
                {
                    <div class="bg-white p-3 rounded shadow mb-2 border border-gray-200">
                        <h5 class="font-bold">@tarea.Titulo</h5>
                        <p class="text-sm text-gray-600">@tarea.Descripcion</p>
                        <div class="flex justify-end gap-2 mt-2">
                            <button class="text-blue-500 text-xs" @onclick="() => Editar(tarea.Id)">Editar</button>
                            <button class="text-red-500 text-xs" @onclick="() => Eliminar(tarea.Id)">Eliminar</button>
                        </div>
                    </div>
                }

                @if (!tareas.Any(t => t.Estado == estado))
                {
                    <p class="text-sm text-gray-500">Sin tareas</p>
                }
            </div>
        }
    </div>
    </div>
    </div> 
}*@